Part : /BASE_PART
{
	NameKey = "Parts/MissileAutoLoaderNuke"
	IconNameKey = "Parts/MissileAutoLoaderNukeIcon"
	ID = jbox1.auto.missile_auto_loader_nuke_new
	EditorGroup = "AutoPower"
	DescriptionKey = "Parts/MissileAutoLoaderNukeDesc"
	Cost = 40000
	Size = [4, 3]
	MaxHealth = 12000
	SelectionPriority = 1
	TypeCategories = [provides_nukes, automated, autoloader]
	ReceivableBuffs : ^/0/ReceivableBuffs [AutoReactorSupply, FtlActivation, AmmoLoaderEfficiency, AutoLoaderEfficiency]
	CrewSpeedFactor = 0
	AllowedDoorLocations = []
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 48]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		SupplyBuffToggle
		{
			Type = BuffToggle
			BuffType = AutoReactorSupply
		}
		FtlActivation
		{
			Type = BuffToggle
			BuffType = FtlActivation
		}
		IndicatorOperational
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = PowerToggle}
				{Toggle = FtlActivation, invert = true}
			]
			Mode = All
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles = [IndicatorOperational, SupplyBuffToggle]
			Mode = All
		}
		SelfBuffProviderReactor
		{
			Type = SelfBuffProvider
			BuffType = AutoLoaderEfficiency
			BuffAmount = {BaseValue = 0 ; BuffType = AutoReactorSupply ; BuffMode = Add}
			OperationalToggle = SupplyBuffToggle //prevent the timer from being stuck on infinity
		}
		SelfBuffProviderNode
		{
			Type = SelfBuffProvider
			BuffType = AutoLoaderEfficiency
			BuffAmount = {BaseValue = 1 ; BuffType = AmmoLoaderEfficiency ; BuffMode = Multiply}
		}
		RepeatingTrigger
		{
			Type = Timer
			OperationalToggle = IsOperational
			Duration = {BaseValue = 1 ; BuffType = AutoLoaderEfficiency ; BuffMode = Divide}
			AutoStart = true
			Repeats = true
		}
		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = RepeatingTrigger
			Invert = true
		}
		NukeProvider1
		{
			Type = TriggeredEffects
			Location = [0.5, 3.5]
			Trigger = RepeatingTrigger
			HitEffects
			[
				{
					Type = AreaAmmoDrain
					AmmoType = missile_part_nuke
					AmountPerPart = -1
					Radius = 0.1
					Falloff = 0
					Filter
					{
						Ships = true
						Friendlies = true
						IgnoreInvulnerability = true
						Enemies = false
					}
					MediaEffectsOnDrainFactor = 1
					MediaEffectsOnDrain = &/COMMON_EFFECTS/MissileLoad
				}
			]
		}
		NukeProvider2
		{
			Type = TriggeredEffects
			Location = [3.5, 3.5]
			Trigger = RepeatingTrigger
			HitEffects
			[
				{
					Type = AreaAmmoDrain
					AmmoType = missile_part_nuke
					AmountPerPart = -1
					Radius = 0.1
					Falloff = 0
					Filter
					{
						Ships = true
						Friendlies = true
						IgnoreInvulnerability = true
						Enemies = false
					}
					MediaEffectsOnDrainFactor = 1
					MediaEffectsOnDrain = &/COMMON_EFFECTS/MissileLoad
				}
			]
		}
		BuffProvider1
		{
			Type = GridBuffProvider
			BuffType = AutoReactorSupplyPenalty1
			BuffAmount = 3
			GridDistance = 8
			AllowDiagonals = true
			OperationalToggle = PowerToggle
		}
		BuffProvider2
		{
			Type = GridBuffProvider
			BuffType = AutoReactorSupplyPenalty2
			BuffAmount = 3
			GridDistance = 12
			AllowDiagonals = true
			OperationalToggle = PowerToggle
		}
		BuffProvider3
		{
			Type = GridBuffProvider
			BuffType = AutoReactorSupplyPenalty3
			BuffAmount = 3
			GridDistance = 16
			AllowDiagonals = true
			OperationalToggle = PowerToggle
		}
		
		Graphics
		{
			Type = Graphics
			Location = [2, 1.5]
			OperationalToggle = IsOperational
			AnimationToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [4, 3]
					}
					{
						File = "floor_33.png"
						Size = [4, 3]
					}
					{
						File = "floor_66.png"
						Size = [4, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							// doodads_on1.png
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
							"doodads_on1.png"
						]
						Size = [4, 3]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [4, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [4, 3]
					}
					{
						File = "walls_33.png"
						Size = [4, 3]
					}
					{
						File = "walls_66.png"
						Size = [4, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "light.png"
						Size = [4, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [4, 3]
					}
					{
						File = "roof_33.png"
						Size = [4, 3]
					}
					{
						File = "roof_66.png"
						Size = [4, 3]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [4, 3]
					}
					{
						File = "roof_windows_33.png"
						Size = [4, 3]
					}
					{
						File = "roof_windows_66.png"
						Size = [4, 3]
					}
				]
			}
			NonOperationalRoofWindows = &OperationalRoofWindows
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [2, 1.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [2, 1.5]
			
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 20000
					Radius = 8
					ExpandDuration = .8
					ExpandStartRadius = 1
					RadiusEffectScaleExponent = 0.5
					ImpulsePerNDamage = 10
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 6000
					Radius = 6
					ExpandDuration = .8
					ExpandStartRadius = 1
					RadiusEffectScaleExponent = 0.5
					ImpulsePerNDamage = 5
					NDamage = 1000
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}
		
		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = IndicatorOperational
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = SupplyBuffToggle
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}
		
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [4, 3]
		}
	}
	Stats
	{
		NukeProduction = (&~/Part/StatsByCategory/0/Stats/MissileLoader/0) * (&~/Part/StatsByCategory/0/Stats/MissileLoader/1) //used by the missile stats mod
		MissileProduction = (&NukeProduction) /12
	}
	StatsByCategory
	[
		{
			NameKey = "StatCategories/MissileLoader"
			Stats
			{
				SupplyPowerUse = &~/Part/Components/BuffProvider1/BuffAmount
				MissileLoader = [-(&~/Part/Components/NukeProvider1/HitEffects/0/AmountPerPart) / (&~/Part/Components/RepeatingTrigger/Duration/BaseValue) , 2]
				Frequency = 1/(&~/Part/Components/RepeatingTrigger/Duration/BaseValue)
			}
		}
	]
}
