Part : /BASE_PART
{
	NameKey = "Parts/AmmoBelt"
	IconNameKey = "Parts/AmmoBeltIcon"
	ID = kwhwwymwn.auto.ammo_belt
	EditorGroup = "AutoPower"
	DescriptionKey = "Parts/AmmoBeltDesc"
	Cost = 1000
	Size = [1, 2]
	MaxHealth = 2000
	SelectionPriority = 1
	TypeCategories = [provides_ammo, automated, storage]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	AllowedDoorLocations
	[
		[-1, 1]
		[1, 1]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 64]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, AmmoStorage]
			Mode = All
		}
		AmmoStorage
		{
			Type = AmmoStorage
			AmmoType = bullet
			MaxAmmo = 6
			StartingAmmo = 0
			InitToMaxAmmoPVP = 0
		}
		AmmoConsumer
		{
			Type = AmmoConsumer
			AmmoType = bullet
			Storage = AmmoStorage
			DefaultPriority = &/PRIORITIES/Storage_Supply
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/AmmoDeliver
		}
		Proxy
		{
			Type = AmmoStorageProxy
			AmmoType = bullet
			PartLocation = [0, -1]
			ComponentID = AmmoStorage
		}
		AmmoLoader
		{
			Type = AmmoConverter
			OperationalToggle = IsOperational
			FromStorage = AmmoStorage
			ToStorage = Proxy
			FromQuantity = 1
			ToQuantity = 1
			Interval = 1/6
		}
		
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [.5, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 2]
					}
					{
						File = "floor_33.png"
						Size = [1, 2]
					}
					{
						File = "floor_66.png"
						Size = [1, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 2]
					}
					{
						File = "roof_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_66.png"
						Size = [1, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads.png"
						Size = [1, 2]
					}
				]
			}
			NonOperationalDoodad = &OperationalDoodad
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 2]
					}
					{
						File = "walls_33.png"
						Size = [1, 2]
					}
					{
						File = "walls_66.png"
						Size = [1, 2]
					}
				]
			}
		}
		
		AmmoSprites
		{
			Type = AmmoSprites
			Location = [.5, 1]
			AmmoStorage = AmmoStorage
			Layer = "doodads_low"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "bullets0.png"
					Size = [1, 2]
				}
				{
					File = "bullets1.png"
					Size = [1, 2]
				}
				{
					File = "bullets2.png"
					Size = [1, 2]
				}
				{
					File = "bullets3.png"
					Size = [1, 2]
				}
				{
					File = "bullets4.png"
					Size = [1, 2]
				}
				{
					File = "bullets5.png"
					Size = [1, 2]
				}
				{
					File = "bullets6.png"
					Size = [1, 2]
				}
			]
		}
		
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [0.5, 1]

			FactorHitEffectsWith = AmmoStorage
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 5000
					Radius = 2.5
					Delay = .05
					FireChancePerNDamage = 50%
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 1000
					Radius = 2
					Delay = .05
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}
		
		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of ammo.
				{
					Toggle = AmmoStorage
					Delay = &~/Part/Components/AmmoLoader/Interval
					AtlasSprite
					{
						File = &/INDICATORS/NoAmmo
						Size = [1, 1]
					}
				}
			]
		}
		

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 2]
		}
	}

	Stats
	{
		AmmoCapacity = &~/Part/Components/AmmoStorage/MaxAmmo
		AmmoThroughput = (&~/Part/Components/AmmoLoader/FromQuantity)/(&~/Part/Components/AmmoLoader/Interval)
		Frequency = 1/(&~/Part/Components/AmmoLoader/Interval)
	}
}