Part : /BASE_PART
{
	NameKey = "Parts/FtlResonator"
	IconNameKey = "Parts/FtlResonatorIcon"
	ID = kwhwwymwn.auto.ftl_resonator
	EditorGroup = "Flight"
	DescriptionKey = "Parts/FtlResonatorDesc"
	Cost = 2000
	Size = [1, 1]
	MaxHealth = 1000
	SelectionPriority = 0
	SelectionTypeID = "ftl"
	TypeCategories = [ftl] // 'ftl' is a magic category that allows the FTL overlay to efficiently find FTL drives.
	ReceivableBuffs : ^/0/ReceivableBuffs [FtlActivation, FtlJumpActivation]
	CrewSpeedFactor = 0
	AllowedDoorLocations = []
	IgnoreRotationForMirroredSelection = true
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [48, 48]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		FtlActivation //ftl jump planed
		{
			Type = BuffToggle
			BuffType = FtlActivation
		}
		FtlActivationTrigger
		{
			Type = ToggleTrigger
			Toggle = FtlActivation
		}
		FtlJumpActivation //other ftl drive ready
		{
			Type = BuffToggle
			BuffType = FtlJumpActivation
		}
		TimerToggle // need minimum 3 seconds to get ready for jump
		{
			Type = Timer
			OperationalToggle = PowerToggle
			Duration = 3
			AutoStart = false
			StartTrigger = FtlActivationTrigger
		}
		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = FtlActivation
			ShowProgressFor = TimerToggle
			invert = true
		}
		IsOperational //activated and other drives ready
		{
			Type = MultiToggle
			Toggles = [PowerToggle, FtlJumpActivation]
			Mode = All
		}
		JumpOperational //ready for jump
		{
			Type = MultiToggle
			Toggles = [IsOperational, TimerToggle]
			Mode = All
		}
		FtlBatteryStorage // non drainable storage so you can't fill it with auto loaders
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 1 
			InitToMaxAmmo = 0
			IsDrainable = false
		}
		BatteryProducer
		{
			Type = AmmoConverter
			OperationalToggle = JumpOperational
			ToStorage = FtlBatteryStorage
			ToQuantity = 1
		}
		PowerDrain // instant shut down
		{
			Type = AmmoConverter
			OperationalToggle = JumpOperational
			InvertOperationalToggle = true
			FromStorage = FtlBatteryStorage
			FromQuantity = 1
		}
		FtlDrive
		{
			Type = FtlDrive
			OperationalToggle = PowerToggle
			AmmoStorage = FtlBatteryStorage
			SpinDownDuration = 5
			JumpEfficiencyDistanceRange = [3, 10]
		}
		
		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalDoodad = &OperationalDoodad
			
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						Size = [1, 1]
					}
				]
			}
		}
		
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [.5, .5]
		}
		
		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [0.8, 0.8]
					}
				}
			]
		}
		
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}
	Stats
	{
		FtlMaxEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/0
		FtlMinEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/1
		FtlLoadingTime = &~/Part/Components/TimerToggle/Duration
	}
}