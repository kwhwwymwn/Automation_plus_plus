Part : /BASE_PART
{
	NameKey = "Parts/AI"
	IconNameKey = "Parts/AIIcon"
	ID = jbox1.auto.ai_mainframe
	OtherIDs = [ai_module]
	EditorGroup = "Drones"
	DescriptionKey = "Parts/AIDesc"
	Cost = 15000
	AIValueFactor = 5
	Size = [2, 3]
	SelectionPriority = 1
	MaxHealth = 4000
	ReceivableBuffs : ^/0/ReceivableBuffs []
	GeneratorRequiresDoor = false
	NoAutoDoors = true
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [42.66, 64]
	}
	Components : ^/0/Components
	{
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [BatteryStorage, PowerToggle]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		
		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 2000
			StartingAmmo = &MaxAmmo
		}
		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/ControlRoom_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		
		PowerDrain
		{
			Type = AmmoConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 1000
			Interval = 60// Drains 1 power every minute.
		}
		
		RepeatingTrigger
		{
			Type = Timer
			OperationalToggle = IsOperational
			Duration = 2
			AutoStart = true
			Repeats = true
		}
		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = RepeatingTrigger
			Invert = true
		}
		
		WifiProvider
		{
			Type = TriggeredEffects
			Location = [1.5, 2]
			Trigger = RepeatingTrigger
			HitEffects
			[
				{
					Type = AreaAmmoDrain
					AmmoType = wifi
					AmountPerPart = -5000 
					Radius = 150
					Falloff = 0
					Delay = 0
					Filter
					{
						Ships = true
						Friendlies = true
						IgnoreInvulnerability = true
						Enemies = false
					}
				}
			]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [1, 1.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"Doodads_high_on_1.png"
							"Doodads_high_on_2.png"
							"Doodads_high_on_3.png"
							"Doodads_high_on_4.png"
							
						]
						Size = [2, 3]
						AnimationInterval = 0.5
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "Doodads_high_off.png"
						Size = [2, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 3]
					}
					{
						File = "walls_33.png"
						Size = [2, 3]
					}
					{
						File = "walls_66.png"
						Size = [2, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [2, 3]
					}
					{
						File = "roof_33.png"
						Size = [2, 3]
					}
					{
						File = "roof_66.png"
						Size = [2, 3]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "Doodads_roof_on.png"
						Size = [2, 3]
					}
					{
						File = "Doodads_roof_on_33.png"
						Size = [2, 3]
					}
					{
						File = "Doodads_roof_on_66.png"
						Size = [2, 3]
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "Doodads_roof_off.png"
						Size = [2, 3]
					}
					{
						File = "Doodads_roof_off_33.png"
						Size = [2, 3]
					}
					{
						File = "Doodads_roof_off_66.png"
						Size = [2, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 3]
					}
				]
			}
		}
		
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [1, 1.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1.5]
		}

		OperationSoundLoop
		{
			Type = ContinuousEffects
			Location = [1, 1.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "cockpit_operating.wav"
					Volume = .15
					MaxConcurrentVolume = .3
					Speed = .75
					MaxConcurrent = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}
				
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}
			]
		}
		

		BlueprintSprite
		{
			File = "Blueprints.png"
			Size = [2, 3]
			Type = BlueprintSprite
		}
	}
	Stats
	{
		PowerUsageContinuous = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = &PowerUsageContinuous
	}
	StatsByCategory
	[
		{
			NameKey = "StatCategories/Wifi"
			Stats
			{
				Range = &~/Part/Components/WifiProvider/HitEffects/0/Radius
				Frequency = 1/(&~/Part/Components/RepeatingTrigger/Duration)
			}
		}
	]
}
