Part : /BASE_PART
{
	NameKey = "Parts/SmallDrone"
	IconNameKey = "Parts/SmallDroneIcon"
	ID = jbox1.auto.drone_core_small
	EditorGroup = "Drones"
	DescriptionKey = "Parts/SmallDroneDesc"
	Cost = 7500
	AIValueFactor = 5
	Density = 3
	Size = [1, 1]
	SelectionPriority = 0
	SelectionTypeID = "drone_core"
	MaxHealth = 1000
	PenetrationResistance = 1
	IsContiguityOrigin = true
	TypeCategories = [command, drone, bounty_objective, need_node]
	AllowedDoorLocations = []
	RequiresCategories = [node]
	ReceivableBuffs : ^/0/ReceivableBuffs [AutoDisable, ApexActivation, FtlActivation, DronePower]
	CrewSpeedFactor = 0
	EditorIcon
	{
		Texture
		{
			File = "Icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		ApexActivation
		{
			Type = BuffToggle
			BuffType = ApexActivation
		}
		DisableBuffToggle
		{
			Type = BuffToggle
			BuffType = AutoDisable
		}
		IndicatorToggle
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = PowerToggle}
				{Toggle = ApexActivation}
				{Toggle = DisableBuffToggle, invert = true}
			]
			Mode = All
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = WiFiStorage}
				{Toggle = IndicatorToggle}
			]
			Mode = All
		}
		FtlActivation
		{
			Type = BuffToggle
			BuffType = FtlActivation
		}
		FtlOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, FtlActivation]
			Mode = All
		}
		AreaOperational
		{
			Type = MultiToggle
			Toggles
			[
				{Toggle = IsOperational}
				{Toggle = FtlActivation, invert = true}
			]
			Mode = All
		}
		FtlIndicator
		{
			Type = MultiToggle
			Toggles = [FtlOperational]
			Invert = true
			Mode = All
		}
		WiFiStorage
		{
			Type = AmmoStorage
			AmmoType = wifi
			MaxAmmo = 2400
		}
		WifiProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = WiFiStorage
			LowColor = [16, 197, 236]
			HighColor = [16, 197, 236]
			FullColor = [16, 197, 236]
			Height = 7
		}
		WifiDrain
		{
			Type = AmmoConverter
			OperationalToggle = IsOperational
			FromStorage = WiFiStorage
			FromQuantity = 80
			Interval = 1
		}
		CommandProvider
		{
			Type = CommandProvider
			OperationalToggle = IsOperational
		}
		Sensor
		{
			Type = Sensor
			SightRadius = 50
		}
		
		//Proxies
		ProxyTop
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [0, -1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyTopRight
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [1, -1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyTopLeft
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [-1, -1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyRight
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [1, 0]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyLeft
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [-1, 0]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyBottom
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [0, 1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyBottomRight
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [1, 1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		ProxyBottomLeft
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [-1, 1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				ExcludeCategories = [ftl]
			}
		}
		MultiStorage
		{
			Type = MultiAmmoStorage
			OperationalToggle = AreaOperational
			AmmoType = battery
			AmmoStorages = [ProxyTop, ProxyTopRight, ProxyTopLeft, ProxyRight, ProxyLeft, ProxyBottom, ProxyBottomRight, ProxyBottomLeft]
			AddMode = DistributeEvenly
		}
		InternalBatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 2000
			InitToMaxAmmo = 0
			IsDrainable = false
		}
		PowerConverter
		{
			Type = AmmoConverter
			OperationalToggle = AreaOperational
			ToStorage = InternalBatteryStorage
			ToQuantity = 2000
			Interval = {BaseValue = 2 ; BuffType = DronePower ; BuffMode = Divide}
		}
		PowerProvider
		{
			Type = AmmoConverter
			FromStorage = InternalBatteryStorage
			ToStorage = MultiStorage
			FromQuantity = 50
			ToQuantity = 50 // share power almost equally, 840 is too high for a perfect power share
		}
		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = AreaOperational
			ShowProgressFor = PowerConverter
		}
		
		//ProxiesFtl
		ProxyTopFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [0, -1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyTopRightFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [1, -1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyTopLeftFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [-1, -1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyRightFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [1, 0]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyLeftFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [-1, 0]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyBottomFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [0, 1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyBottomRightFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [1, 1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		ProxyBottomLeftFtl
		{
			Type = AmmoStorageProxy
			AmmoType = battery
			PartLocation = [-1, 1]
			ComponentID = BatteryStorage
			PartCriteria
			{
				Categories = [ftl]
			}
		}
		MultiStorageFtl
		{
			Type = MultiAmmoStorage
			OperationalToggle = FtlOperational
			AmmoType = battery
			AmmoStorages = [ProxyTopFtl, ProxyTopRightFtl, ProxyTopLeftFtl, ProxyRightFtl, ProxyLeftFtl, ProxyBottomFtl, ProxyBottomRightFtl, ProxyBottomLeftFtl]
			AddMode = DistributeEvenly
		}
		FtlPowerProvider
		{
			Type = AmmoConverter
			OperationalToggle = FtlOperational
			ToStorage = MultiStorageFtl
			ToQuantity = 2000
			Interval = 1
		}
		FtlProgressBar
		{
			Type = ProgressBar
			OperationalToggle = FtlOperational
			ShowProgressFor = FtlPowerProvider
		}
		
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [0.5, 0.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"Doodads_on1.png"
							"Doodads_on2.png"
							"Doodads_on3.png"
							"Doodads_on4.png"
							
						]
						Size = [1, 1]
						AnimationInterval = 0.5
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"Doodads_off1.png"
							"Doodads_off2.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.5
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						Size = [1, 1]
					}
				]
			}
		}
		
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [0.5, 0.5]

			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 6000
					Radius = 3
					Delay = .05
					FireChancePerNDamage = 50%
					ImpulsePerNDamage = 10
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 3000
					Radius = 2
					Delay = .05
					ImpulsePerNDamage = 5
					NDamage = 1000
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off or disabled
				{
					Toggle = IndicatorToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}
				// No WiFi
				{
					Toggle = WiFiStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoWifi
						Size = [1, 1]
					}
				}
				//ftl activated
				{
					Toggle = FtlIndicator
					AtlasSprite
					{
						File = &/INDICATORS/FtlActivated
						Size = [1, 1]
					}
				}
			]
		}
		BlueprintSprite0
		{
			File = "Blueprints.png"
			Size = [1, 1]
			Type = BlueprintSprite
		}
	}

	Stats
	{
		PowerGeneration = &~/Part/StatsByCategory/0/Stats/TotalPowerLoader
		SensorRange = &~/Part/Components/Sensor/SightRadius
		WifiAutonomy = (&~/Part/Components/WiFiStorage/MaxAmmo) / ((&~/Part/Components/WifiDrain/FromQuantity) / (&~/Part/Components/WifiDrain/Interval))
	}
	StatsByCategory
	[
		{
			NameKey = "StatCategories/PowerLoader"
			Stats
			{
				TotalPowerLoader = (&~/Part/Components/PowerConverter/ToQuantity) / (&~/Part/Components/PowerConverter/Interval/BaseValue) / 1000
				Frequency = 1/(&~/Part/Components/PowerConverter/Interval/BaseValue)
			}
		}
	]
}